[{"E:\\MERN Stack\\ReactJS\\extranett\\src\\index.js":"1","E:\\MERN Stack\\ReactJS\\extranett\\src\\App.js":"2","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Login\\index.js":"3","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Dashboard\\index.js":"4","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Navbar\\index.js":"5","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Register\\index.js":"6","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\NotFound\\index.js":"7","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Orders\\index.js":"8","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Deposits\\index.js":"9","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Chart\\index.js":"10","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\ListItems\\index.js":"11","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Title\\index.js":"12","E:\\MERN Stack\\ReactJS\\extranett\\src\\store.js":"13","E:\\MERN Stack\\ReactJS\\extranett\\src\\Store.js":"14","E:\\MERN Stack\\ReactJS\\extranett\\src\\Reducers\\index.js":"15","E:\\MERN Stack\\ReactJS\\extranett\\src\\Actions\\authActions.js":"16","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Dashboard\\Order\\index.js":"17","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Home\\index.js":"18","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Dashboard\\Customer\\index.js":"19","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Customers\\index.js":"20","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Dashboard\\Report\\index.js":"21","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Reports\\index.js":"22","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Dashboard\\Report\\Quarter\\index.js":"23","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Dashboard\\Report\\Month\\index.js":"24","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Dashboard\\Report\\YearEnd\\index.js":"25","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Reports\\Quarters.js":"26","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Reports\\Yearends.js":"27","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Reports\\Months.js":"28","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Dashboard\\Account\\index.js":"29","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Accounts\\index.js":"30","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\ForgetPass\\index.js":"31","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\VerificationMail\\index.js":"32","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Timer\\index.js":"33","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\VerificationOTP\\index.js":"34","E:\\MERN Stack\\ReactJS\\extranett\\src\\reportWebVitals.js":"35","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\ResetPass\\index.js":"36"},{"size":700,"mtime":1611129304230,"results":"37","hashOfConfig":"38"},{"size":2149,"mtime":1611574648039,"results":"39","hashOfConfig":"38"},{"size":4729,"mtime":1611564493644,"results":"40","hashOfConfig":"38"},{"size":6184,"mtime":1611560959259,"results":"41","hashOfConfig":"38"},{"size":7587,"mtime":1611283248300,"results":"42","hashOfConfig":"38"},{"size":5835,"mtime":1611563978830,"results":"43","hashOfConfig":"38"},{"size":292,"mtime":1611284515685,"results":"44","hashOfConfig":"38"},{"size":2418,"mtime":1611287288477,"results":"45","hashOfConfig":"38"},{"size":933,"mtime":1611287297581,"results":"46","hashOfConfig":"38"},{"size":1572,"mtime":1611287290211,"results":"47","hashOfConfig":"38"},{"size":2990,"mtime":1611562635317,"results":"48","hashOfConfig":"38"},{"size":376,"mtime":1611286834636,"results":"49","hashOfConfig":"38"},{"size":442,"mtime":1611306739509,"results":"50","hashOfConfig":"38"},{"size":484,"mtime":1611558113461,"results":"51","hashOfConfig":"38"},{"size":0,"mtime":1611306578388,"results":"52","hashOfConfig":"38"},{"size":0,"mtime":1611306620343,"results":"53","hashOfConfig":"38"},{"size":5592,"mtime":1611560943788,"results":"54","hashOfConfig":"38"},{"size":1472,"mtime":1611560179220,"results":"55","hashOfConfig":"38"},{"size":5464,"mtime":1611560917168,"results":"56","hashOfConfig":"38"},{"size":1559,"mtime":1611560577851,"results":"57","hashOfConfig":"38"},{"size":5452,"mtime":1611561206452,"results":"58","hashOfConfig":"38"},{"size":1475,"mtime":1611561174581,"results":"59","hashOfConfig":"38"},{"size":5483,"mtime":1611562022852,"results":"60","hashOfConfig":"38"},{"size":5476,"mtime":1611562014840,"results":"61","hashOfConfig":"38"},{"size":5480,"mtime":1611562031940,"results":"62","hashOfConfig":"38"},{"size":1476,"mtime":1611561650004,"results":"63","hashOfConfig":"38"},{"size":1476,"mtime":1611561661461,"results":"64","hashOfConfig":"38"},{"size":1474,"mtime":1611561634365,"results":"65","hashOfConfig":"38"},{"size":5457,"mtime":1611562614612,"results":"66","hashOfConfig":"38"},{"size":242,"mtime":1611563022052,"results":"67","hashOfConfig":"38"},{"size":2067,"mtime":1611569566101,"results":"68","hashOfConfig":"38"},{"size":1982,"mtime":1611573768887,"results":"69","hashOfConfig":"38"},{"size":487,"mtime":1611569946212,"results":"70","hashOfConfig":"38"},{"size":4876,"mtime":1611573715206,"results":"71","hashOfConfig":"38"},{"size":362,"mtime":1611573444687,"results":"72","hashOfConfig":"38"},{"size":2506,"mtime":1611576432643,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"p7avb9",{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\MERN Stack\\ReactJS\\extranett\\src\\index.js",[],["159","160"],"E:\\MERN Stack\\ReactJS\\extranett\\src\\App.js",["161"],"E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Login\\index.js",["162"],"import React, { Fragment, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/Security';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Eyeslash from '@material-ui/icons/VisibilityOff';\r\nimport Eyeopen from '@material-ui/icons/Visibility';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { InputAdornment } from '@material-ui/core';\r\n\r\nconst Login = () => {\r\n\r\n    const [showPass, setShowPass] = useState(false);\r\n    const togglePassVisibility = () => {\r\n        setShowPass(showPass ? false : true);\r\n    };\r\n\r\n\r\n\tfunction Copyright() {\r\n\t\treturn (\r\n\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n\t\t\t\t{'Copyright © '}\r\n\t\t\t\t<Link color=\"inherit\" href=\"https://carikamar.id\">\r\n\t\t\t\t\tCariKamar.id\r\n\t\t\t\t</Link>{' '}\r\n\t\t\t\t{new Date().getFullYear()}\r\n\t\t\t\t{'.'}\r\n\t\t\t</Typography>\r\n\t\t);\r\n\t}\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\troot: {\r\n\t\t\theight: '100vh'\r\n\t\t},\r\n\t\timage: {\r\n\t\t\tbackgroundImage: 'url(https://source.unsplash.com/random)',\r\n\t\t\tbackgroundRepeat: 'no-repeat',\r\n\t\t\tbackgroundColor: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n\t\t\tbackgroundSize: 'cover',\r\n\t\t\tbackgroundPosition: 'center'\r\n\t\t},\r\n\t\tpaper: {\r\n\t\t\tmargin: theme.spacing(8, 4),\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\talignItems: 'center'\r\n\t\t},\r\n\t\tavatar: {\r\n\t\t\tmargin: theme.spacing(1),\r\n\t\t\tbackgroundColor: '#299BD7'\r\n\t\t},\r\n\t\tform: {\r\n\t\t\twidth: '100%', // Fix IE 11 issue.\r\n\t\t\tmarginTop: theme.spacing(1)\r\n\t\t},\r\n\t\tsubmit: {\r\n\t\t\tmargin: theme.spacing(3, 0, 2)\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\tconst [email, password, setEmail, setPassword] = useState(\"\");\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Grid container component=\"main\" className={classes.root}>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n\t\t\t\t<Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n\t\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t\t<Avatar className={classes.avatar}>\r\n\t\t\t\t\t\t\t<LockOutlinedIcon style={{backgroundColor:'#299BD7'}} />\r\n\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\r\n\t\t\t\t\t\t\tMitra CariKamar\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<form action=\"/dashboard\" className={classes.form} noValidate>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\tlabel=\"Alamat Email\"\r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\ttype={showPass ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\tid=\"Password\"\r\n                                autoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t/>\r\n                            <FormControlLabel\r\n                                onClick={togglePassVisibility}\r\n                                style={{marginLeft:0}}\r\n                                control={showPass ? <Eyeslash/> : <Eyeopen/>}\r\n                                label={showPass ? 'Sembuyikan' : 'Lihat Password'}\r\n                            />\r\n                            <br/>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tcontrol={<Checkbox value=\"remember\" color=\"primary\" />}\r\n\t\t\t\t\t\t\t\tlabel=\"Ingatkan Saya\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tstyle={{backgroundColor:'#299BD7'}}\r\n\t\t\t\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMasuk\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t\t<Link href=\"/forget-password\" variant=\"body2\">\r\n\t\t\t\t\t\t\t\t\t\tLupa Password?\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<Link href=\"/register\" variant=\"body2\">\r\n\t\t\t\t\t\t\t\t\t\t{\"Belum punya akun? Daftar\"}\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Box mt={5}>\r\n\t\t\t\t\t\t\t\t<Copyright />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Dashboard\\index.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Navbar\\index.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Register\\index.js",["163","164","165","166","167","168","169","170","171","172","173","174"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    withRouter\r\n  } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../Actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://carikamar.id\">\r\n          CariKamar.id\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: '#299BD7'\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n      backgroundColor:'#299BD7'\r\n    },\r\n  }));\r\n\r\n  const Register = () => {\r\n    const classes = useStyles();\r\n\r\n    const [name, email, password, password2, setName, setEmail, setPassword, setPassword2] = useState(\"\");\r\n\r\n  //   useEffect( () => {\r\n      \r\n  // }, [props.counter])\r\n\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Registrasi\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    autoComplete=\"fname\"\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={name}\r\n                    // onChange={e => setName(e.target.value)}\r\n                    id=\"firstName\"\r\n                    label=\"Nama Lengkap\"\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={email}\r\n                    // onChange={e => setEmail(e.target.value)}\r\n                    id=\"email\"\r\n                    label=\"Alamat Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    alue={password}\r\n                    // onChange={e => setPassword(e.target.value)}\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    alue={password2}\r\n                    // onChange={e => setPassword2(e.target.value)}\r\n                    name=\"password2\"\r\n                    label=\"Ulangi Password\"\r\n                    type=\"password\"\r\n                    id=\"password2\"\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                    label=\"Saya setuju dengan Kebijakan dan Aturan yang berlaku di Carikamar.id\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Daftar\r\n              </Button>\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                  <Link href=\"/\" variant=\"body2\">\r\n                    Sudah punya akun? Masuk\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n          <Box mt={5}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      );\r\n  }\r\n\r\n  // const mapStateToProps = state => ({\r\n  //   auth: state.auth,\r\n  //   errors: state.errors\r\n  // });\r\n  // Register.propTypes = {\r\n  //   registerUser: PropTypes.func.isRequired,\r\n  //   auth: PropTypes.object.isRequired,\r\n  //   errors: PropTypes.object.isRequired\r\n  // };\r\n\r\n  export default Register;","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\NotFound\\index.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Orders\\index.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Deposits\\index.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Chart\\index.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\ListItems\\index.js",["175"],"import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const mainListItems = (\r\n    <div>\r\n      <ListItem button component={Link} to=\"/dashboard\">\r\n        <ListItemIcon>\r\n          <DashboardIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Dashboard\" />\r\n      </ListItem>\r\n      <ListItem button component={Link} to=\"/dashboard/order\">\r\n        <ListItemIcon>\r\n          <ShoppingCartIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Orders\" />\r\n      </ListItem>\r\n      <ListItem button component={Link} to=\"/dashboard/customer\">\r\n        <ListItemIcon>\r\n          <PeopleIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Customers\" />\r\n      </ListItem>\r\n      <ListItem button component={Link} to=\"/dashboard/report\">\r\n        <ListItemIcon>\r\n          <BarChartIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Reports\" />\r\n      </ListItem>\r\n    </div>\r\n  );\r\n\r\n  export const secondaryListItems = (\r\n    <div>\r\n      <ListSubheader inset>Saved reports</ListSubheader>\r\n      <ListItem button component={Link} to=\"/dashboard/report/month\">\r\n        <ListItemIcon>\r\n          <AssignmentIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Current month\" />\r\n      </ListItem>\r\n      <ListItem button component={Link} to=\"/dashboard/report/last-quarter\">\r\n        <ListItemIcon>\r\n          <AssignmentIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Last quarter\" />\r\n      </ListItem>\r\n      <ListItem button component={Link} to=\"/dashboard/report/year-end\">\r\n        <ListItemIcon>\r\n          <AssignmentIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Year-end sale\" />\r\n      </ListItem>\r\n    </div>\r\n  );\r\n\r\n  export const logoutListItems = (\r\n    <div>\r\n      <ListSubheader inset>Setting</ListSubheader>\r\n      <ListItem button component={Link} to=\"/dashboard/account\">\r\n        <ListItemIcon>\r\n          <AccountCircleIcon/>\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Account\" />\r\n      </ListItem>\r\n      <ListItem button component={Link} to=\"/\">\r\n        <ListItemIcon>\r\n          <PowerSettingsNewIcon/>\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Logout\" />\r\n      </ListItem>\r\n    </div>\r\n  )","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Title\\index.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\store.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\Store.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\Reducers\\index.js",[],["176","177"],"E:\\MERN Stack\\ReactJS\\extranett\\src\\Actions\\authActions.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Dashboard\\Order\\index.js",["178","179","180","181","182","183"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems, logoutListItems } from '../../../components/ListItems';\r\nimport Chart from '../../../components/Chart';\r\nimport Deposits from '../../../components/Deposits';\r\nimport Orders from '../../../components/Orders';\r\nimport Home from '../../../components/Home';\r\n\r\nconst Order = () => {\r\n\tfunction Copyright() {\r\n\t\treturn (\r\n\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n\t\t\t\t{'Copyright © '}\r\n\t\t\t\t<Link color=\"inherit\" href=\"https://carikamar.id\">\r\n\t\t\t\t\tCariKamar.id\r\n\t\t\t\t</Link>{' '}\r\n\t\t\t\t{new Date().getFullYear()}\r\n\t\t\t\t{'.'}\r\n\t\t\t</Typography>\r\n\t\t);\r\n\t}\r\n\r\n\tconst drawerWidth = 240;\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\troot: {\r\n\t\t\tdisplay: 'flex'\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tpaddingRight: 24 // keep right padding when drawer closed\r\n\t\t},\r\n\t\ttoolbarIcon: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'flex-end',\r\n\t\t\tpadding: '0 8px',\r\n\t\t\t...theme.mixins.toolbar\r\n\t\t},\r\n\t\tappBar: {\r\n\t\t\tzIndex: theme.zIndex.drawer + 1,\r\n\t\t\ttransition: theme.transitions.create([ 'width', 'margin' ], {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.leavingScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tappBarShift: {\r\n\t\t\tmarginLeft: drawerWidth,\r\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\t\ttransition: theme.transitions.create([ 'width', 'margin' ], {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.enteringScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tmenuButton: {\r\n\t\t\tmarginRight: 36\r\n\t\t},\r\n\t\tmenuButtonHidden: {\r\n\t\t\tdisplay: 'none'\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tflexGrow: 1\r\n\t\t},\r\n\t\tdrawerPaper: {\r\n\t\t\tposition: 'relative',\r\n\t\t\twhiteSpace: 'nowrap',\r\n\t\t\twidth: drawerWidth,\r\n\t\t\ttransition: theme.transitions.create('width', {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.enteringScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tdrawerPaperClose: {\r\n\t\t\toverflowX: 'hidden',\r\n\t\t\ttransition: theme.transitions.create('width', {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.leavingScreen\r\n\t\t\t}),\r\n\t\t\twidth: theme.spacing(7),\r\n\t\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\t\twidth: theme.spacing(9)\r\n\t\t\t}\r\n\t\t},\r\n\t\tappBarSpacer: theme.mixins.toolbar,\r\n\t\tcontent: {\r\n\t\t\tflexGrow: 1,\r\n\t\t\theight: '100vh',\r\n\t\t\toverflow: 'auto'\r\n\t\t},\r\n\t\tcontainer: {\r\n\t\t\tpaddingTop: theme.spacing(4),\r\n\t\t\tpaddingBottom: theme.spacing(4)\r\n\t\t},\r\n\t\tpaper: {\r\n\t\t\tpadding: theme.spacing(2),\r\n\t\t\tdisplay: 'flex',\r\n\t\t\toverflow: 'auto',\r\n\t\t\tflexDirection: 'column'\r\n\t\t},\r\n\t\tfixedHeight: {\r\n\t\t\theight: 240\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\tconst [ open, setOpen ] = React.useState(true);\r\n\tconst handleDrawerOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst handleDrawerClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\treturn (\r\n        <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" style={{backgroundColor:'#299BD7'}} className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Orders\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondaryListItems}</List>\r\n\t\t<Divider />\r\n\t\t<List>{logoutListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Home/>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Order;\r\n","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Home\\index.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Dashboard\\Customer\\index.js",["184","185","186"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems, logoutListItems } from '../../../components/ListItems';\r\nimport Customers from '../../../components/Customers';\r\n\r\nconst Customer = () => {\r\n\tfunction Copyright() {\r\n\t\treturn (\r\n\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n\t\t\t\t{'Copyright © '}\r\n\t\t\t\t<Link color=\"inherit\" href=\"https://carikamar.id\">\r\n\t\t\t\t\tCariKamar.id\r\n\t\t\t\t</Link>{' '}\r\n\t\t\t\t{new Date().getFullYear()}\r\n\t\t\t\t{'.'}\r\n\t\t\t</Typography>\r\n\t\t);\r\n\t}\r\n\r\n\tconst drawerWidth = 240;\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\troot: {\r\n\t\t\tdisplay: 'flex'\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tpaddingRight: 24 // keep right padding when drawer closed\r\n\t\t},\r\n\t\ttoolbarIcon: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'flex-end',\r\n\t\t\tpadding: '0 8px',\r\n\t\t\t...theme.mixins.toolbar\r\n\t\t},\r\n\t\tappBar: {\r\n\t\t\tzIndex: theme.zIndex.drawer + 1,\r\n\t\t\ttransition: theme.transitions.create([ 'width', 'margin' ], {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.leavingScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tappBarShift: {\r\n\t\t\tmarginLeft: drawerWidth,\r\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\t\ttransition: theme.transitions.create([ 'width', 'margin' ], {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.enteringScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tmenuButton: {\r\n\t\t\tmarginRight: 36\r\n\t\t},\r\n\t\tmenuButtonHidden: {\r\n\t\t\tdisplay: 'none'\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tflexGrow: 1\r\n\t\t},\r\n\t\tdrawerPaper: {\r\n\t\t\tposition: 'relative',\r\n\t\t\twhiteSpace: 'nowrap',\r\n\t\t\twidth: drawerWidth,\r\n\t\t\ttransition: theme.transitions.create('width', {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.enteringScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tdrawerPaperClose: {\r\n\t\t\toverflowX: 'hidden',\r\n\t\t\ttransition: theme.transitions.create('width', {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.leavingScreen\r\n\t\t\t}),\r\n\t\t\twidth: theme.spacing(7),\r\n\t\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\t\twidth: theme.spacing(9)\r\n\t\t\t}\r\n\t\t},\r\n\t\tappBarSpacer: theme.mixins.toolbar,\r\n\t\tcontent: {\r\n\t\t\tflexGrow: 1,\r\n\t\t\theight: '100vh',\r\n\t\t\toverflow: 'auto'\r\n\t\t},\r\n\t\tcontainer: {\r\n\t\t\tpaddingTop: theme.spacing(4),\r\n\t\t\tpaddingBottom: theme.spacing(4)\r\n\t\t},\r\n\t\tpaper: {\r\n\t\t\tpadding: theme.spacing(2),\r\n\t\t\tdisplay: 'flex',\r\n\t\t\toverflow: 'auto',\r\n\t\t\tflexDirection: 'column'\r\n\t\t},\r\n\t\tfixedHeight: {\r\n\t\t\theight: 240\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\tconst [ open, setOpen ] = React.useState(true);\r\n\tconst handleDrawerOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst handleDrawerClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\treturn (\r\n        <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" style={{backgroundColor:'#299BD7'}} className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Customers\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondaryListItems}</List>\r\n\t\t<Divider />\r\n\t\t<List>{logoutListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Customers/>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Customer;\r\n","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Customers\\index.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Dashboard\\Report\\index.js",["187","188","189"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems, logoutListItems } from '../../../components/ListItems';\r\nimport Reports from '../../../components/Reports';\r\n\r\nconst Report = () => {\r\n\tfunction Copyright() {\r\n\t\treturn (\r\n\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n\t\t\t\t{'Copyright © '}\r\n\t\t\t\t<Link color=\"inherit\" href=\"https://carikamar.id\">\r\n\t\t\t\t\tCariKamar.id\r\n\t\t\t\t</Link>{' '}\r\n\t\t\t\t{new Date().getFullYear()}\r\n\t\t\t\t{'.'}\r\n\t\t\t</Typography>\r\n\t\t);\r\n\t}\r\n\r\n\tconst drawerWidth = 240;\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\troot: {\r\n\t\t\tdisplay: 'flex'\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tpaddingRight: 24 // keep right padding when drawer closed\r\n\t\t},\r\n\t\ttoolbarIcon: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'flex-end',\r\n\t\t\tpadding: '0 8px',\r\n\t\t\t...theme.mixins.toolbar\r\n\t\t},\r\n\t\tappBar: {\r\n\t\t\tzIndex: theme.zIndex.drawer + 1,\r\n\t\t\ttransition: theme.transitions.create([ 'width', 'margin' ], {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.leavingScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tappBarShift: {\r\n\t\t\tmarginLeft: drawerWidth,\r\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\t\ttransition: theme.transitions.create([ 'width', 'margin' ], {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.enteringScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tmenuButton: {\r\n\t\t\tmarginRight: 36\r\n\t\t},\r\n\t\tmenuButtonHidden: {\r\n\t\t\tdisplay: 'none'\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tflexGrow: 1\r\n\t\t},\r\n\t\tdrawerPaper: {\r\n\t\t\tposition: 'relative',\r\n\t\t\twhiteSpace: 'nowrap',\r\n\t\t\twidth: drawerWidth,\r\n\t\t\ttransition: theme.transitions.create('width', {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.enteringScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tdrawerPaperClose: {\r\n\t\t\toverflowX: 'hidden',\r\n\t\t\ttransition: theme.transitions.create('width', {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.leavingScreen\r\n\t\t\t}),\r\n\t\t\twidth: theme.spacing(7),\r\n\t\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\t\twidth: theme.spacing(9)\r\n\t\t\t}\r\n\t\t},\r\n\t\tappBarSpacer: theme.mixins.toolbar,\r\n\t\tcontent: {\r\n\t\t\tflexGrow: 1,\r\n\t\t\theight: '100vh',\r\n\t\t\toverflow: 'auto'\r\n\t\t},\r\n\t\tcontainer: {\r\n\t\t\tpaddingTop: theme.spacing(4),\r\n\t\t\tpaddingBottom: theme.spacing(4)\r\n\t\t},\r\n\t\tpaper: {\r\n\t\t\tpadding: theme.spacing(2),\r\n\t\t\tdisplay: 'flex',\r\n\t\t\toverflow: 'auto',\r\n\t\t\tflexDirection: 'column'\r\n\t\t},\r\n\t\tfixedHeight: {\r\n\t\t\theight: 240\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\tconst [ open, setOpen ] = React.useState(true);\r\n\tconst handleDrawerOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst handleDrawerClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\treturn (\r\n        <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" style={{backgroundColor:'#299BD7'}} className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Reports\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondaryListItems}</List>\r\n\t\t<Divider />\r\n\t\t<List>{logoutListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Reports/>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Report;\r\n","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Reports\\index.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Dashboard\\Report\\Quarter\\index.js",["190","191","192"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems, logoutListItems } from '../../../../components/ListItems';\r\nimport Quarters from '../../../../components/Reports/Quarters';\r\n\r\nconst Quarter = () => {\r\n\tfunction Copyright() {\r\n\t\treturn (\r\n\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n\t\t\t\t{'Copyright © '}\r\n\t\t\t\t<Link color=\"inherit\" href=\"https://carikamar.id\">\r\n\t\t\t\t\tCariKamar.id\r\n\t\t\t\t</Link>{' '}\r\n\t\t\t\t{new Date().getFullYear()}\r\n\t\t\t\t{'.'}\r\n\t\t\t</Typography>\r\n\t\t);\r\n\t}\r\n\r\n\tconst drawerWidth = 240;\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\troot: {\r\n\t\t\tdisplay: 'flex'\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tpaddingRight: 24 // keep right padding when drawer closed\r\n\t\t},\r\n\t\ttoolbarIcon: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'flex-end',\r\n\t\t\tpadding: '0 8px',\r\n\t\t\t...theme.mixins.toolbar\r\n\t\t},\r\n\t\tappBar: {\r\n\t\t\tzIndex: theme.zIndex.drawer + 1,\r\n\t\t\ttransition: theme.transitions.create([ 'width', 'margin' ], {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.leavingScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tappBarShift: {\r\n\t\t\tmarginLeft: drawerWidth,\r\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\t\ttransition: theme.transitions.create([ 'width', 'margin' ], {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.enteringScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tmenuButton: {\r\n\t\t\tmarginRight: 36\r\n\t\t},\r\n\t\tmenuButtonHidden: {\r\n\t\t\tdisplay: 'none'\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tflexGrow: 1\r\n\t\t},\r\n\t\tdrawerPaper: {\r\n\t\t\tposition: 'relative',\r\n\t\t\twhiteSpace: 'nowrap',\r\n\t\t\twidth: drawerWidth,\r\n\t\t\ttransition: theme.transitions.create('width', {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.enteringScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tdrawerPaperClose: {\r\n\t\t\toverflowX: 'hidden',\r\n\t\t\ttransition: theme.transitions.create('width', {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.leavingScreen\r\n\t\t\t}),\r\n\t\t\twidth: theme.spacing(7),\r\n\t\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\t\twidth: theme.spacing(9)\r\n\t\t\t}\r\n\t\t},\r\n\t\tappBarSpacer: theme.mixins.toolbar,\r\n\t\tcontent: {\r\n\t\t\tflexGrow: 1,\r\n\t\t\theight: '100vh',\r\n\t\t\toverflow: 'auto'\r\n\t\t},\r\n\t\tcontainer: {\r\n\t\t\tpaddingTop: theme.spacing(4),\r\n\t\t\tpaddingBottom: theme.spacing(4)\r\n\t\t},\r\n\t\tpaper: {\r\n\t\t\tpadding: theme.spacing(2),\r\n\t\t\tdisplay: 'flex',\r\n\t\t\toverflow: 'auto',\r\n\t\t\tflexDirection: 'column'\r\n\t\t},\r\n\t\tfixedHeight: {\r\n\t\t\theight: 240\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\tconst [ open, setOpen ] = React.useState(true);\r\n\tconst handleDrawerOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst handleDrawerClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\treturn (\r\n        <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" style={{backgroundColor:'#299BD7'}} className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Last Quarter Report\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondaryListItems}</List>\r\n\t\t<Divider />\r\n\t\t<List>{logoutListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Quarters/>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Quarter;\r\n","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Dashboard\\Report\\Month\\index.js",["193","194","195"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems, logoutListItems } from '../../../../components/ListItems';\r\nimport Months from '../../../../components/Reports/Months';\r\n\r\nconst Report = () => {\r\n\tfunction Copyright() {\r\n\t\treturn (\r\n\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n\t\t\t\t{'Copyright © '}\r\n\t\t\t\t<Link color=\"inherit\" href=\"https://carikamar.id\">\r\n\t\t\t\t\tCariKamar.id\r\n\t\t\t\t</Link>{' '}\r\n\t\t\t\t{new Date().getFullYear()}\r\n\t\t\t\t{'.'}\r\n\t\t\t</Typography>\r\n\t\t);\r\n\t}\r\n\r\n\tconst drawerWidth = 240;\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\troot: {\r\n\t\t\tdisplay: 'flex'\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tpaddingRight: 24 // keep right padding when drawer closed\r\n\t\t},\r\n\t\ttoolbarIcon: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'flex-end',\r\n\t\t\tpadding: '0 8px',\r\n\t\t\t...theme.mixins.toolbar\r\n\t\t},\r\n\t\tappBar: {\r\n\t\t\tzIndex: theme.zIndex.drawer + 1,\r\n\t\t\ttransition: theme.transitions.create([ 'width', 'margin' ], {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.leavingScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tappBarShift: {\r\n\t\t\tmarginLeft: drawerWidth,\r\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\t\ttransition: theme.transitions.create([ 'width', 'margin' ], {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.enteringScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tmenuButton: {\r\n\t\t\tmarginRight: 36\r\n\t\t},\r\n\t\tmenuButtonHidden: {\r\n\t\t\tdisplay: 'none'\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tflexGrow: 1\r\n\t\t},\r\n\t\tdrawerPaper: {\r\n\t\t\tposition: 'relative',\r\n\t\t\twhiteSpace: 'nowrap',\r\n\t\t\twidth: drawerWidth,\r\n\t\t\ttransition: theme.transitions.create('width', {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.enteringScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tdrawerPaperClose: {\r\n\t\t\toverflowX: 'hidden',\r\n\t\t\ttransition: theme.transitions.create('width', {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.leavingScreen\r\n\t\t\t}),\r\n\t\t\twidth: theme.spacing(7),\r\n\t\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\t\twidth: theme.spacing(9)\r\n\t\t\t}\r\n\t\t},\r\n\t\tappBarSpacer: theme.mixins.toolbar,\r\n\t\tcontent: {\r\n\t\t\tflexGrow: 1,\r\n\t\t\theight: '100vh',\r\n\t\t\toverflow: 'auto'\r\n\t\t},\r\n\t\tcontainer: {\r\n\t\t\tpaddingTop: theme.spacing(4),\r\n\t\t\tpaddingBottom: theme.spacing(4)\r\n\t\t},\r\n\t\tpaper: {\r\n\t\t\tpadding: theme.spacing(2),\r\n\t\t\tdisplay: 'flex',\r\n\t\t\toverflow: 'auto',\r\n\t\t\tflexDirection: 'column'\r\n\t\t},\r\n\t\tfixedHeight: {\r\n\t\t\theight: 240\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\tconst [ open, setOpen ] = React.useState(true);\r\n\tconst handleDrawerOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst handleDrawerClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\treturn (\r\n        <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" style={{backgroundColor:'#299BD7'}} className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Current Month Report\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondaryListItems}</List>\r\n\t\t<Divider />\r\n\t\t<List>{logoutListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Months/>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Report;\r\n","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Dashboard\\Report\\YearEnd\\index.js",["196","197","198"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems, logoutListItems } from '../../../../components/ListItems';\r\nimport Yearends from '../../../../components/Reports/Yearends';\r\n\r\nconst YearEnd = () => {\r\n\tfunction Copyright() {\r\n\t\treturn (\r\n\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n\t\t\t\t{'Copyright © '}\r\n\t\t\t\t<Link color=\"inherit\" href=\"https://carikamar.id\">\r\n\t\t\t\t\tCariKamar.id\r\n\t\t\t\t</Link>{' '}\r\n\t\t\t\t{new Date().getFullYear()}\r\n\t\t\t\t{'.'}\r\n\t\t\t</Typography>\r\n\t\t);\r\n\t}\r\n\r\n\tconst drawerWidth = 240;\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\troot: {\r\n\t\t\tdisplay: 'flex'\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tpaddingRight: 24 // keep right padding when drawer closed\r\n\t\t},\r\n\t\ttoolbarIcon: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'flex-end',\r\n\t\t\tpadding: '0 8px',\r\n\t\t\t...theme.mixins.toolbar\r\n\t\t},\r\n\t\tappBar: {\r\n\t\t\tzIndex: theme.zIndex.drawer + 1,\r\n\t\t\ttransition: theme.transitions.create([ 'width', 'margin' ], {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.leavingScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tappBarShift: {\r\n\t\t\tmarginLeft: drawerWidth,\r\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\t\ttransition: theme.transitions.create([ 'width', 'margin' ], {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.enteringScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tmenuButton: {\r\n\t\t\tmarginRight: 36\r\n\t\t},\r\n\t\tmenuButtonHidden: {\r\n\t\t\tdisplay: 'none'\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tflexGrow: 1\r\n\t\t},\r\n\t\tdrawerPaper: {\r\n\t\t\tposition: 'relative',\r\n\t\t\twhiteSpace: 'nowrap',\r\n\t\t\twidth: drawerWidth,\r\n\t\t\ttransition: theme.transitions.create('width', {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.enteringScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tdrawerPaperClose: {\r\n\t\t\toverflowX: 'hidden',\r\n\t\t\ttransition: theme.transitions.create('width', {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.leavingScreen\r\n\t\t\t}),\r\n\t\t\twidth: theme.spacing(7),\r\n\t\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\t\twidth: theme.spacing(9)\r\n\t\t\t}\r\n\t\t},\r\n\t\tappBarSpacer: theme.mixins.toolbar,\r\n\t\tcontent: {\r\n\t\t\tflexGrow: 1,\r\n\t\t\theight: '100vh',\r\n\t\t\toverflow: 'auto'\r\n\t\t},\r\n\t\tcontainer: {\r\n\t\t\tpaddingTop: theme.spacing(4),\r\n\t\t\tpaddingBottom: theme.spacing(4)\r\n\t\t},\r\n\t\tpaper: {\r\n\t\t\tpadding: theme.spacing(2),\r\n\t\t\tdisplay: 'flex',\r\n\t\t\toverflow: 'auto',\r\n\t\t\tflexDirection: 'column'\r\n\t\t},\r\n\t\tfixedHeight: {\r\n\t\t\theight: 240\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\tconst [ open, setOpen ] = React.useState(true);\r\n\tconst handleDrawerOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst handleDrawerClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\treturn (\r\n        <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" style={{backgroundColor:'#299BD7'}} className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Last Year Report\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondaryListItems}</List>\r\n\t\t<Divider />\r\n\t\t<List>{logoutListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Yearends/>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default YearEnd;\r\n","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Reports\\Quarters.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Reports\\Yearends.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Reports\\Months.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\Dashboard\\Account\\index.js",["199","200","201"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems, logoutListItems } from '../../../components/ListItems';\r\nimport Accounts from \"../../../components/Accounts\";\r\n\r\nconst Account = () => {\r\n\tfunction Copyright() {\r\n\t\treturn (\r\n\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n\t\t\t\t{'Copyright © '}\r\n\t\t\t\t<Link color=\"inherit\" href=\"https://carikamar.id\">\r\n\t\t\t\t\tCariKamar.id\r\n\t\t\t\t</Link>{' '}\r\n\t\t\t\t{new Date().getFullYear()}\r\n\t\t\t\t{'.'}\r\n\t\t\t</Typography>\r\n\t\t);\r\n\t}\r\n\r\n\tconst drawerWidth = 240;\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\troot: {\r\n\t\t\tdisplay: 'flex'\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tpaddingRight: 24 // keep right padding when drawer closed\r\n\t\t},\r\n\t\ttoolbarIcon: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'flex-end',\r\n\t\t\tpadding: '0 8px',\r\n\t\t\t...theme.mixins.toolbar\r\n\t\t},\r\n\t\tappBar: {\r\n\t\t\tzIndex: theme.zIndex.drawer + 1,\r\n\t\t\ttransition: theme.transitions.create([ 'width', 'margin' ], {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.leavingScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tappBarShift: {\r\n\t\t\tmarginLeft: drawerWidth,\r\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\t\ttransition: theme.transitions.create([ 'width', 'margin' ], {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.enteringScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tmenuButton: {\r\n\t\t\tmarginRight: 36\r\n\t\t},\r\n\t\tmenuButtonHidden: {\r\n\t\t\tdisplay: 'none'\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tflexGrow: 1\r\n\t\t},\r\n\t\tdrawerPaper: {\r\n\t\t\tposition: 'relative',\r\n\t\t\twhiteSpace: 'nowrap',\r\n\t\t\twidth: drawerWidth,\r\n\t\t\ttransition: theme.transitions.create('width', {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.enteringScreen\r\n\t\t\t})\r\n\t\t},\r\n\t\tdrawerPaperClose: {\r\n\t\t\toverflowX: 'hidden',\r\n\t\t\ttransition: theme.transitions.create('width', {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.leavingScreen\r\n\t\t\t}),\r\n\t\t\twidth: theme.spacing(7),\r\n\t\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\t\twidth: theme.spacing(9)\r\n\t\t\t}\r\n\t\t},\r\n\t\tappBarSpacer: theme.mixins.toolbar,\r\n\t\tcontent: {\r\n\t\t\tflexGrow: 1,\r\n\t\t\theight: '100vh',\r\n\t\t\toverflow: 'auto'\r\n\t\t},\r\n\t\tcontainer: {\r\n\t\t\tpaddingTop: theme.spacing(4),\r\n\t\t\tpaddingBottom: theme.spacing(4)\r\n\t\t},\r\n\t\tpaper: {\r\n\t\t\tpadding: theme.spacing(2),\r\n\t\t\tdisplay: 'flex',\r\n\t\t\toverflow: 'auto',\r\n\t\t\tflexDirection: 'column'\r\n\t\t},\r\n\t\tfixedHeight: {\r\n\t\t\theight: 240\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\tconst [ open, setOpen ] = React.useState(true);\r\n\tconst handleDrawerOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst handleDrawerClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\treturn (\r\n        <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar style={{backgroundColor:'#299BD7'}} position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Account\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondaryListItems}</List>\r\n\t\t<Divider />\r\n\t\t<List>{logoutListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Accounts/>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Account;\r\n","E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Accounts\\index.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\ForgetPass\\index.js",["202"],"import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport React, { Component } from 'react';\r\nimport logo from '../../assets/images/carikamar/Biru_Full_Vertikal.png';\r\nimport mail from '../../assets/images/mail.jpg';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center'\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: '#299BD7'\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%', // Fix IE 11 issue.\r\n\t\tmarginTop: theme.spacing(3)\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t\tbackgroundColor: '#299BD7'\r\n\t},\r\n\timage: {\r\n\t\twidth: 200,\r\n\t\theight: 200\r\n\t},\r\n\timageMail: {\r\n\t\twidth: 300,\r\n\t\theight: 200\r\n\t}\r\n}));\r\n\r\nconst ForgetPass = () => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Container component=\"main\" maxWidth=\"xs\">\r\n\t\t\t<CssBaseline />\r\n\t\t\t<div className={classes.paper}>\r\n\t\t\t\t<img alt=\"\" src={logo} className={classes.image} />\r\n\t\t\t\t<img alt=\"Mail\" src={mail} className={classes.imageMail} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h4 style={{ fontWeight: 'bold', color: '#299BD7' }}>Masukkan Alamat Email Kamu</h4>\r\n\t\t\t\t\t<form action=\"/verification-email\" className={classes.form} noValidate>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tautoComplete=\"fname\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t// onChange={e => setName(e.target.value)}\r\n\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tKirim\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Link href=\"/\" variant=\"body2\">\r\n\t\t\t\t\tKembali\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ForgetPass;\r\n","E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\VerificationMail\\index.js",["203","204"],"E:\\MERN Stack\\ReactJS\\extranett\\src\\components\\Timer\\index.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\VerificationOTP\\index.js",["205","206","207","208","209","210","211","212","213","214","215","216"],"E:\\MERN Stack\\ReactJS\\extranett\\src\\reportWebVitals.js",[],"E:\\MERN Stack\\ReactJS\\extranett\\src\\pages\\ResetPass\\index.js",["217"],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":6,"column":10,"nodeType":"224","messageId":"225","endLine":6,"endColumn":25},{"ruleId":"222","severity":1,"message":"226","line":17,"column":10,"nodeType":"224","messageId":"225","endLine":17,"endColumn":24},{"ruleId":"222","severity":1,"message":"227","line":16,"column":22,"nodeType":"224","messageId":"225","endLine":16,"endColumn":28},{"ruleId":"222","severity":1,"message":"228","line":17,"column":5,"nodeType":"224","messageId":"225","endLine":17,"endColumn":11},{"ruleId":"222","severity":1,"message":"229","line":18,"column":5,"nodeType":"224","messageId":"225","endLine":18,"endColumn":10},{"ruleId":"222","severity":1,"message":"230","line":19,"column":5,"nodeType":"224","messageId":"225","endLine":19,"endColumn":15},{"ruleId":"222","severity":1,"message":"231","line":21,"column":8,"nodeType":"224","messageId":"225","endLine":21,"endColumn":17},{"ruleId":"222","severity":1,"message":"232","line":22,"column":10,"nodeType":"224","messageId":"225","endLine":22,"endColumn":17},{"ruleId":"222","severity":1,"message":"233","line":23,"column":10,"nodeType":"224","messageId":"225","endLine":23,"endColumn":22},{"ruleId":"222","severity":1,"message":"234","line":24,"column":8,"nodeType":"224","messageId":"225","endLine":24,"endColumn":18},{"ruleId":"222","severity":1,"message":"235","line":63,"column":46,"nodeType":"224","messageId":"225","endLine":63,"endColumn":53},{"ruleId":"222","severity":1,"message":"236","line":63,"column":55,"nodeType":"224","messageId":"225","endLine":63,"endColumn":63},{"ruleId":"222","severity":1,"message":"237","line":63,"column":65,"nodeType":"224","messageId":"225","endLine":63,"endColumn":76},{"ruleId":"222","severity":1,"message":"238","line":63,"column":78,"nodeType":"224","messageId":"225","endLine":63,"endColumn":90},{"ruleId":"222","severity":1,"message":"239","line":10,"column":8,"nodeType":"224","messageId":"225","endLine":10,"endColumn":18},{"ruleId":"218","replacedBy":"240"},{"ruleId":"220","replacedBy":"241"},{"ruleId":"222","severity":1,"message":"242","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":12},{"ruleId":"222","severity":1,"message":"243","line":16,"column":8,"nodeType":"224","messageId":"225","endLine":16,"endColumn":13},{"ruleId":"222","severity":1,"message":"244","line":22,"column":8,"nodeType":"224","messageId":"225","endLine":22,"endColumn":13},{"ruleId":"222","severity":1,"message":"245","line":23,"column":8,"nodeType":"224","messageId":"225","endLine":23,"endColumn":16},{"ruleId":"222","severity":1,"message":"246","line":24,"column":8,"nodeType":"224","messageId":"225","endLine":24,"endColumn":14},{"ruleId":"222","severity":1,"message":"247","line":130,"column":8,"nodeType":"224","messageId":"225","endLine":130,"endColumn":24},{"ruleId":"222","severity":1,"message":"242","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":12},{"ruleId":"222","severity":1,"message":"243","line":16,"column":8,"nodeType":"224","messageId":"225","endLine":16,"endColumn":13},{"ruleId":"222","severity":1,"message":"247","line":127,"column":8,"nodeType":"224","messageId":"225","endLine":127,"endColumn":24},{"ruleId":"222","severity":1,"message":"242","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":12},{"ruleId":"222","severity":1,"message":"243","line":16,"column":8,"nodeType":"224","messageId":"225","endLine":16,"endColumn":13},{"ruleId":"222","severity":1,"message":"247","line":127,"column":8,"nodeType":"224","messageId":"225","endLine":127,"endColumn":24},{"ruleId":"222","severity":1,"message":"242","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":12},{"ruleId":"222","severity":1,"message":"243","line":16,"column":8,"nodeType":"224","messageId":"225","endLine":16,"endColumn":13},{"ruleId":"222","severity":1,"message":"247","line":127,"column":8,"nodeType":"224","messageId":"225","endLine":127,"endColumn":24},{"ruleId":"222","severity":1,"message":"242","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":12},{"ruleId":"222","severity":1,"message":"243","line":16,"column":8,"nodeType":"224","messageId":"225","endLine":16,"endColumn":13},{"ruleId":"222","severity":1,"message":"247","line":127,"column":8,"nodeType":"224","messageId":"225","endLine":127,"endColumn":24},{"ruleId":"222","severity":1,"message":"242","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":12},{"ruleId":"222","severity":1,"message":"243","line":16,"column":8,"nodeType":"224","messageId":"225","endLine":16,"endColumn":13},{"ruleId":"222","severity":1,"message":"247","line":127,"column":8,"nodeType":"224","messageId":"225","endLine":127,"endColumn":24},{"ruleId":"222","severity":1,"message":"242","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":12},{"ruleId":"222","severity":1,"message":"243","line":16,"column":8,"nodeType":"224","messageId":"225","endLine":16,"endColumn":13},{"ruleId":"222","severity":1,"message":"247","line":127,"column":8,"nodeType":"224","messageId":"225","endLine":127,"endColumn":24},{"ruleId":"222","severity":1,"message":"248","line":3,"column":17,"nodeType":"224","messageId":"225","endLine":3,"endColumn":26},{"ruleId":"222","severity":1,"message":"248","line":3,"column":17,"nodeType":"224","messageId":"225","endLine":3,"endColumn":26},{"ruleId":"222","severity":1,"message":"249","line":6,"column":8,"nodeType":"224","messageId":"225","endLine":6,"endColumn":17},{"ruleId":"222","severity":1,"message":"250","line":6,"column":8,"nodeType":"224","messageId":"225","endLine":6,"endColumn":24},{"ruleId":"222","severity":1,"message":"251","line":7,"column":8,"nodeType":"224","messageId":"225","endLine":7,"endColumn":16},{"ruleId":"222","severity":1,"message":"252","line":14,"column":8,"nodeType":"224","messageId":"225","endLine":14,"endColumn":16},{"ruleId":"222","severity":1,"message":"253","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":15},{"ruleId":"222","severity":1,"message":"226","line":17,"column":10,"nodeType":"224","messageId":"225","endLine":17,"endColumn":24},{"ruleId":"222","severity":1,"message":"254","line":18,"column":8,"nodeType":"224","messageId":"225","endLine":18,"endColumn":20},{"ruleId":"222","severity":1,"message":"255","line":22,"column":8,"nodeType":"224","messageId":"225","endLine":22,"endColumn":28},{"ruleId":"222","severity":1,"message":"256","line":70,"column":10,"nodeType":"224","messageId":"225","endLine":70,"endColumn":15},{"ruleId":"222","severity":1,"message":"257","line":70,"column":17,"nodeType":"224","messageId":"225","endLine":70,"endColumn":25},{"ruleId":"222","severity":1,"message":"236","line":70,"column":27,"nodeType":"224","messageId":"225","endLine":70,"endColumn":35},{"ruleId":"222","severity":1,"message":"237","line":70,"column":37,"nodeType":"224","messageId":"225","endLine":70,"endColumn":48},{"ruleId":"222","severity":1,"message":"258","line":71,"column":8,"nodeType":"224","messageId":"225","endLine":71,"endColumn":18},{"ruleId":"222","severity":1,"message":"248","line":3,"column":17,"nodeType":"224","messageId":"225","endLine":3,"endColumn":26},"no-native-reassign",["259"],"no-negated-in-lhs",["260"],"no-unused-vars","'logoutListItems' is defined but never used.","Identifier","unusedVar","'InputAdornment' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'withRouter' is defined but never used.","'PropTypes' is defined but never used.","'connect' is defined but never used.","'registerUser' is defined but never used.","'classnames' is defined but never used.","'setName' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setPassword2' is assigned a value but never used.","'LayersIcon' is defined but never used.",["259"],["260"],"'Grid' is defined but never used.","'Paper' is defined but never used.","'Chart' is defined but never used.","'Deposits' is defined but never used.","'Orders' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","'Component' is defined but never used.","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Eyeslash' is defined but never used.","'Eyeopen' is defined but never used.","'Autocomplete' is defined but never used.","'togglePassVisibility' is assigned a value but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'codeNation' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]